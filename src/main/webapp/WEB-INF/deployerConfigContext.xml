<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <util:map id="authenticationHandlersResolvers">
        <entry key-ref="proxyAuthenticationHandler" value-ref="proxyPrincipalResolver" />
        <entry key-ref="primaryAuthenticationHandler" value-ref="primaryPrincipalResolver" />
    </util:map>

    <util:list id="authenticationMetadataPopulators">
        <ref bean="successfulHandlerMetaDataPopulator" />
        <ref bean="rememberMeAuthenticationMetaDataPopulator" />
    </util:list>

    <bean id="attributeRepository" class="org.jasig.services.persondir.support.NamedStubPersonAttributeDao"
          p:backingMap-ref="attrRepoBackingMap" /> 

	<!-- <bean id="attributeRepository"
        class="org.jasig.services.persondir.support.jdbc.SingleRowJdbcPersonAttributeDao">
        <constructor-arg index="0" ref="dataSource" />
        <constructor-arg index="1"
            value="SELECT id,username,password,enabled FROM cas_user WHERE {0}" />
        <property name="queryAttributeMapping">
            <map>
                <entry key="username" value="username" />
            </map>
        </property>
        <property name="resultAttributeMapping">
            <map>
                key为对应的数据库字段名称，value为提供给客户端获取的属性名字，系统会自动填充值
                <entry key="id" value="id"></entry>
                <entry key="username" value="username"></entry>
                <entry key="password" value="password"></entry>
                <entry key="enabled" value="enabled"></entry>
            </map>
        </property>
    </bean> -->

	<!-- <alias name="acceptUsersAuthenticationHandler" alias="primaryAuthenticationHandler" /> -->
    
    <bean id="dataSource"
		  class="com.mchange.v2.c3p0.ComboPooledDataSource"
		  p:driverClass="${database.driverClass}"
		  p:jdbcUrl="${database.url}"
		  p:user="${database.user}"
		  p:password="${database.password}"
		  p:initialPoolSize="${database.pool.minSize}"
		  p:minPoolSize="${database.pool.minSize}"
		  p:maxPoolSize="${database.pool.maxSize}"
		  p:maxIdleTimeExcessConnections="${database.pool.maxIdleTime}"
		  p:checkoutTimeout="${database.pool.maxWait}"
		  p:acquireIncrement="${database.pool.acquireIncrement}"
		  p:acquireRetryAttempts="${database.pool.acquireRetryAttempts}"
		  p:acquireRetryDelay="${database.pool.acquireRetryDelay}"
		  p:idleConnectionTestPeriod="${database.pool.idleConnectionTestPeriod}"
		  p:preferredTestQuery="${database.pool.connectionHealthQuery}" />
    
    <alias name="queryDatabaseAuthenticationHandler" alias="primaryAuthenticationHandler" />
	<alias name="dataSource" alias="queryDatabaseDataSource" />

	<!-- 配合cas.authn.password.encoding.alg=MD5使用  -->
	<alias name="defaultPasswordEncoder" alias="passwordEncoder" />
	
	<!-- <alias name="queryAndEncodeDatabaseAuthenticationHandler" alias="primaryAuthenticationHandler" />
	<alias name="dataSource" alias="queryEncodeDatabaseDataSource" />  -->
	
    <alias name="personDirectoryPrincipalResolver" alias="primaryPrincipalResolver" />

    <util:map id="attrRepoBackingMap">
        <entry key="uid" value="uid" />
        <entry key="eduPersonAffiliation" value="eduPersonAffiliation" />
        <entry key="groupMembership" value="groupMembership" />
        <entry>
            <key><value>memberOf</value></key>
            <list>
                <value>faculty</value>
                <value>staff</value>
                <value>org</value>
            </list>
        </entry>
    </util:map> 

    <alias name="serviceThemeResolver" alias="themeResolver" />

    <alias name="jsonServiceRegistryDao" alias="serviceRegistryDao" />

    <alias name="defaultTicketRegistry" alias="ticketRegistry" />
    
    <alias name="ticketGrantingTicketExpirationPolicy" alias="grantingTicketExpirationPolicy" />
    <alias name="multiTimeUseOrTimeoutExpirationPolicy" alias="serviceTicketExpirationPolicy" />

    <alias name="anyAuthenticationPolicy" alias="authenticationPolicy" />
    <alias name="acceptAnyAuthenticationPolicyFactory" alias="authenticationPolicyFactory" />

    <bean id="auditTrailManager"
          class="org.jasig.inspektr.audit.support.Slf4jLoggingAuditTrailManager"
          p:entrySeparator="${cas.audit.singleline.separator:|}"
          p:useSingleLine="${cas.audit.singleline:false}"/>

    <alias name="neverThrottle" alias="authenticationThrottle" />

    <util:list id="monitorsList">
        <ref bean="memoryMonitor" />
        <ref bean="sessionMonitor" />
    </util:list>

    <alias name="defaultPrincipalFactory" alias="principalFactory" />
    <alias name="defaultAuthenticationTransactionManager" alias="authenticationTransactionManager" />
    <alias name="defaultPrincipalElectionStrategy" alias="principalElectionStrategy" />
    <alias name="tgcCipherExecutor" alias="defaultCookieCipherExecutor" />
    
    <!-- 4.2以下才能使用 ，4.2以上需要在 cas.properties文件上配置 -->
    <!-- 增加参数p:requireSecure="false"，是否需要安全验证，即HTTPS，false为不采用  -->
    <!-- <bean class="org.jasig.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler"
		p:httpClient-ref="httpClient"  p:requireSecure="false"/>  -->
</beans>